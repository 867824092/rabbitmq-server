name: Test - Erlang 23.1
on: push
jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    outputs:
      branch_or_tag_name: ${{ steps.ref.outputs.branch_or_tag_name }}
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: CHECK RABBITMQ COMPONENTS
      id: ref
      run: |
        branch_or_tag_name=${GITHUB_REF#refs/*/}
        echo "::set-output name=branch_or_tag_name::$branch_or_tag_name"
    - name: CACHE SECONDARY UMBRELLAS
      uses: actions/cache@v2
      with:
        path: umbrellas
        key: secondary-umbrellas-v3.7.28-v3.8.9-erlang-23.1
    - name: PREPARE SECONDARY UMBRELLA COPIES
      run: |
        set -ex
        for version in v3.7.28 v3.8.9; do
          umbrella="umbrellas/$version"
          if ! test -d "$umbrella"  ||
              ! make -C "$umbrella/deps/rabbit" test-dist; then
            rm -rf "$umbrella"
            git config --global advice.detachedHead false
            git clone \
              https://github.com/rabbitmq/rabbitmq-public-umbrella.git \
              "$umbrella"
            # `make co` in the public umbrella will use files from rabbitmq-server
            # to know what to fetch, and these are now different post monorepo. So,
            # we must clone rabbitmq-server manually and check out $version before
            # we run `make co`
            mkdir -p "$umbrella"/deps
            git clone \
              https://github.com/rabbitmq/rabbitmq-server.git \
              "$umbrella"/deps/rabbit
            git -C "$umbrella"/deps/rabbit checkout "$version"
            make -C "$umbrella" co
            make -C "$umbrella" up BRANCH="$version"
            # To remove third-party deps which were checked out when the
            # projects were on the `master` branch. Thus, possibly not the
            # version pinning we expect. We update the Umbrella one last time
            # to fetch the correct third-party deps.
            make -C "$umbrella" clean-3rd-party-repos
            make -C "$umbrella" up
            make -C "$umbrella/deps/rabbit" test-dist
            rm -rf "$umbrella"/deps/rabbitmq_website
            rm -rf "$umbrella"/deps/rabbitmq_prometheus/docker
            rm -rf "$umbrella"/deps/*/{.git,test} "$umbrella"/.git
          fi
        done
    - name: CREATE SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar cf - umbrellas | xz > secondary-umbrellas.tar.xz
    - name: UPLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/upload-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
        path: secondary-umbrellas.tar.xz
  xref:
    name: xref
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN XREF rabbit_common
      run: |
        make -C deps/rabbit_common xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbit
      run: |
        make -C deps/rabbit xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF amqp_client
      run: |
        make -C deps/amqp_client xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF amqp10_client
      run: |
        make -C deps/amqp10_client xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF amqp10_common
      run: |
        make -C deps/amqp10_common xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_amqp1_0
      run: |
        make -C deps/rabbitmq_amqp1_0 xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_auth_backend_cache
      run: |
        make -C deps/rabbitmq_auth_backend_cache xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_auth_backend_http
      run: |
        make -C deps/rabbitmq_auth_backend_http xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_auth_backend_ldap
      run: |
        make -C deps/rabbitmq_auth_backend_ldap xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_auth_backend_oauth2
      run: |
        make -C deps/rabbitmq_auth_backend_oauth2 xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_auth_mechanism_ssl
      run: |
        make -C deps/rabbitmq_auth_mechanism_ssl xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_aws
      run: |
        make -C deps/rabbitmq_aws xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_cli
      run: |
        make -C deps/rabbitmq_cli xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_consistent_hash_exchange
      run: |
        make -C deps/rabbitmq_consistent_hash_exchange xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_event_exchange
      run: |
        make -C deps/rabbitmq_event_exchange xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_federation
      run: |
        make -C deps/rabbitmq_federation xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_federation_management
      run: |
        make -C deps/rabbitmq_federation_management xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_jms_topic_exchange
      run: |
        make -C deps/rabbitmq_jms_topic_exchange xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_management
      run: |
        make -C deps/rabbitmq_management xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_management_agent
      run: |
        make -C deps/rabbitmq_management_agent xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_mqtt
      run: |
        make -C deps/rabbitmq_mqtt xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_peer_discovery_common
      run: |
        make -C deps/rabbitmq_peer_discovery_common xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_peer_discovery_aws
      run: |
        make -C deps/rabbitmq_peer_discovery_aws xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_peer_discovery_k8s
      run: |
        make -C deps/rabbitmq_peer_discovery_k8s xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_peer_discovery_consul
      run: |
        make -C deps/rabbitmq_peer_discovery_consul xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_peer_discovery_etcd
      run: |
        make -C deps/rabbitmq_peer_discovery_etcd xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_prometheus
      run: |
        make -C deps/rabbitmq_prometheus xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_random_exchange
      run: |
        make -C deps/rabbitmq_random_exchange xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_recent_history_exchange
      run: |
        make -C deps/rabbitmq_recent_history_exchange xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_sharding
      run: |
        make -C deps/rabbitmq_sharding xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_shovel
      run: |
        make -C deps/rabbitmq_shovel xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_shovel_management
      run: |
        make -C deps/rabbitmq_shovel_management xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_stomp
      run: |
        make -C deps/rabbitmq_stomp xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_stream
      run: |
        make -C deps/rabbitmq_stream xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_stream_management
      run: |
        make -C deps/rabbitmq_stream_management xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_stream_prometheus
      run: |
        make -C deps/rabbitmq_stream_prometheus xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_top
      run: |
        make -C deps/rabbitmq_top xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_tracing
      run: |
        make -C deps/rabbitmq_tracing xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_trust_store
      run: |
        make -C deps/rabbitmq_trust_store xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_web_dispatch
      run: |
        make -C deps/rabbitmq_web_dispatch xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_web_mqtt
      run: |
        make -C deps/rabbitmq_web_mqtt xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_web_mqtt_examples
      run: |
        make -C deps/rabbitmq_web_mqtt_examples xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_web_stomp
      run: |
        make -C deps/rabbitmq_web_stomp xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
    - name: RUN XREF rabbitmq_web_stomp_examples
      run: |
        make -C deps/rabbitmq_web_stomp_examples xref \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }}
  dialyze:
    name: dialyze
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN DIALYZE rabbit_common
      run: |
        make -C deps/rabbit_common dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbit
      run: |
        make -C deps/rabbit dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE amqp10_client
      run: |
        make -C deps/amqp10_client dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE amqp10_common
      run: |
        make -C deps/amqp10_common dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_auth_mechanism_ssl
      run: |
        make -C deps/rabbitmq_auth_mechanism_ssl dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_event_exchange
      run: |
        make -C deps/rabbitmq_event_exchange dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_federation_management
      run: |
        make -C deps/rabbitmq_federation_management dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_peer_discovery_common
      run: |
        make -C deps/rabbitmq_peer_discovery_common dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_random_exchange
      run: |
        make -C deps/rabbitmq_random_exchange dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_shovel_management
      run: |
        make -C deps/rabbitmq_shovel_management dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_top
      run: |
        make -C deps/rabbitmq_top dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_tracing
      run: |
        make -C deps/rabbitmq_tracing dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_web_mqtt_examples
      run: |
        make -C deps/rabbitmq_web_mqtt_examples dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
    - name: RUN DIALYZE rabbitmq_web_stomp_examples
      run: |
        make -C deps/rabbitmq_web_stomp_examples dialyze \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL=
  rabbit_common:
    name: rabbit_common
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbit_common tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbit_common ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbit_common-ct-logs
        path: deps/rabbit_common/*-ct-logs-*.tar.xz
  rabbit-checks:
    name: rabbit-checks
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: VALIDATE KNOWN CT SUITES
      env:
        project: rabbit
      run: |
        ci/scripts/validate-workflow.sh amqqueue_backward_compatibility backing_queue channel_interceptor channel_operation_timeout cluster cluster_rename clustering_management config_schema confirms_rejects consumer_timeout crashing_queues dead_lettering definition_import disconnect_detected_during_alarm dynamic_ha dynamic_qq eager_sync feature_flags lazy_queue list_consumers_sanity_check list_queues_online_and_offline maintenance_mode many_node_ha message_size_limit metrics mirrored_supervisor msg_store peer_discovery_classic_config peer_discovery_dns per_user_connection_channel_limit per_user_connection_channel_limit_partitions per_user_connection_channel_tracking per_user_connection_tracking per_vhost_connection_limit per_vhost_connection_limit_partitions per_vhost_msg_store per_vhost_queue_limit policy priority_queue priority_queue_recovery product_info proxy_protocol publisher_confirms_parallel queue_length_limits queue_master_location queue_parallel queue_type quorum_queue rabbit_confirms rabbit_core_metrics_gc rabbit_fifo rabbit_fifo_int rabbit_fifo_prop rabbit_fifo_v0 rabbit_msg_record rabbit_stream_queue rabbitmq_queues_cli_integration rabbitmqctl_integration rabbitmqctl_shutdown signal_handling simple_ha single_active_consumer sync_detection term_to_binary_compat_prop topic_permission unit_access_control unit_access_control_authn_authz_context_propagation unit_access_control_credential_validation unit_amqp091_content_framing unit_amqp091_server_properties unit_app_management unit_cluster_formation_locking_mocks unit_collections unit_config_value_encryption unit_connection_tracking unit_credit_flow unit_disk_monitor unit_disk_monitor_mocks unit_file_handle_cache unit_gen_server2 unit_gm unit_log_config unit_log_management unit_operator_policy unit_pg_local unit_plugin_directories unit_plugin_versioning unit_policy_validators unit_priority_queue unit_queue_consumers unit_stats_and_metrics unit_supervisor2 unit_vm_memory_monitor upgrade_preparation vhost
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN EUNIT
      run: |
        make eunit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
  rabbit-ct-amqqueue_backward_compatibility:
    name: rabbit-ct-amqqueue_backward_compatibility
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-amqqueue_backward_compatibility
      id: tests
      run: |
        make -C deps/rabbit ct-amqqueue_backward_compatibility \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-amqqueue_backward_compatibility-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-amqqueue_backward_compatibility [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-amqqueue_backward_compatibility \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-amqqueue_backward_compatibility-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-amqqueue_backward_compatibility [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-amqqueue_backward_compatibility \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-amqqueue_backward_compatibility-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-backing_queue:
    name: rabbit-ct-backing_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-backing_queue
      id: tests
      run: |
        make -C deps/rabbit ct-backing_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-backing_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-backing_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-backing_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-backing_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-backing_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-backing_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-backing_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-channel_interceptor:
    name: rabbit-ct-channel_interceptor
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-channel_interceptor
      id: tests
      run: |
        make -C deps/rabbit ct-channel_interceptor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-channel_interceptor-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-channel_interceptor [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-channel_interceptor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-channel_interceptor-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-channel_interceptor [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-channel_interceptor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-channel_interceptor-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-channel_operation_timeout:
    name: rabbit-ct-channel_operation_timeout
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-channel_operation_timeout
      id: tests
      run: |
        make -C deps/rabbit ct-channel_operation_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-channel_operation_timeout-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-channel_operation_timeout [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-channel_operation_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-channel_operation_timeout-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-channel_operation_timeout [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-channel_operation_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-channel_operation_timeout-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-cluster:
    name: rabbit-ct-cluster
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-cluster
      id: tests
      run: |
        make -C deps/rabbit ct-cluster \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-cluster-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-cluster [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-cluster \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-cluster-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-cluster [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-cluster \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-cluster-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-cluster_rename:
    name: rabbit-ct-cluster_rename
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-cluster_rename
      id: tests
      run: |
        make -C deps/rabbit ct-cluster_rename \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-cluster_rename-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-cluster_rename [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-cluster_rename \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-cluster_rename-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-cluster_rename [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-cluster_rename \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-cluster_rename-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-clustering_management:
    name: rabbit-ct-clustering_management
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-clustering_management
      id: tests
      run: |
        make -C deps/rabbit ct-clustering_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-clustering_management-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-clustering_management [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-clustering_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-clustering_management-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-clustering_management [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-clustering_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-clustering_management-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-config_schema:
    name: rabbit-ct-config_schema
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-config_schema
      id: tests
      run: |
        make -C deps/rabbit ct-config_schema \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-config_schema-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-config_schema [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-config_schema \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-config_schema-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-config_schema [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-config_schema \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-config_schema-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-confirms_rejects:
    name: rabbit-ct-confirms_rejects
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-confirms_rejects
      id: tests
      run: |
        make -C deps/rabbit ct-confirms_rejects \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-confirms_rejects-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-confirms_rejects [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-confirms_rejects \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-confirms_rejects-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-confirms_rejects [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-confirms_rejects \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-confirms_rejects-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-consumer_timeout:
    name: rabbit-ct-consumer_timeout
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-consumer_timeout
      id: tests
      run: |
        make -C deps/rabbit ct-consumer_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-consumer_timeout-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-consumer_timeout [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-consumer_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-consumer_timeout-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-consumer_timeout [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-consumer_timeout \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-consumer_timeout-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-crashing_queues:
    name: rabbit-ct-crashing_queues
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-crashing_queues
      id: tests
      run: |
        make -C deps/rabbit ct-crashing_queues \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-crashing_queues-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-crashing_queues [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-crashing_queues \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-crashing_queues-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-crashing_queues [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-crashing_queues \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-crashing_queues-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-dead_lettering:
    name: rabbit-ct-dead_lettering
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-dead_lettering
      id: tests
      run: |
        make -C deps/rabbit ct-dead_lettering \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-dead_lettering-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-dead_lettering [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-dead_lettering \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-dead_lettering-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-dead_lettering [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-dead_lettering \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-dead_lettering-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-definition_import:
    name: rabbit-ct-definition_import
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-definition_import
      id: tests
      run: |
        make -C deps/rabbit ct-definition_import \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-definition_import-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-definition_import [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-definition_import \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-definition_import-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-definition_import [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-definition_import \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-definition_import-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-disconnect_detected_during_alarm:
    name: rabbit-ct-disconnect_detected_during_alarm
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-disconnect_detected_during_alarm
      id: tests
      run: |
        make -C deps/rabbit ct-disconnect_detected_during_alarm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-disconnect_detected_during_alarm-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-disconnect_detected_during_alarm [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-disconnect_detected_during_alarm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-disconnect_detected_during_alarm-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-disconnect_detected_during_alarm [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-disconnect_detected_during_alarm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-disconnect_detected_during_alarm-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-dynamic_ha:
    name: rabbit-ct-dynamic_ha
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-dynamic_ha
      id: tests
      run: |
        make -C deps/rabbit ct-dynamic_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_ha-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-dynamic_ha [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-dynamic_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_ha-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-dynamic_ha [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-dynamic_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_ha-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-dynamic_qq:
    name: rabbit-ct-dynamic_qq
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-dynamic_qq
      id: tests
      run: |
        make -C deps/rabbit ct-dynamic_qq \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_qq-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-dynamic_qq [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-dynamic_qq \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_qq-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-dynamic_qq [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-dynamic_qq \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-dynamic_qq-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-eager_sync:
    name: rabbit-ct-eager_sync
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-eager_sync
      id: tests
      run: |
        make -C deps/rabbit ct-eager_sync \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-eager_sync-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-eager_sync [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-eager_sync \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-eager_sync-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-eager_sync [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-eager_sync \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-eager_sync-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-feature_flags:
    name: rabbit-ct-feature_flags
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-feature_flags
      id: tests
      run: |
        make -C deps/rabbit ct-feature_flags \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-feature_flags-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-feature_flags [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-feature_flags \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-feature_flags-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-feature_flags [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-feature_flags \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-feature_flags-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-lazy_queue:
    name: rabbit-ct-lazy_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-lazy_queue
      id: tests
      run: |
        make -C deps/rabbit ct-lazy_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-lazy_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-lazy_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-lazy_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-lazy_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-lazy_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-lazy_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-lazy_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-list_consumers_sanity_check:
    name: rabbit-ct-list_consumers_sanity_check
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-list_consumers_sanity_check
      id: tests
      run: |
        make -C deps/rabbit ct-list_consumers_sanity_check \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-list_consumers_sanity_check-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-list_consumers_sanity_check [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-list_consumers_sanity_check \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-list_consumers_sanity_check-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-list_consumers_sanity_check [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-list_consumers_sanity_check \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-list_consumers_sanity_check-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-list_queues_online_and_offline:
    name: rabbit-ct-list_queues_online_and_offline
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-list_queues_online_and_offline
      id: tests
      run: |
        make -C deps/rabbit ct-list_queues_online_and_offline \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-list_queues_online_and_offline-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-list_queues_online_and_offline [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-list_queues_online_and_offline \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-list_queues_online_and_offline-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-list_queues_online_and_offline [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-list_queues_online_and_offline \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-list_queues_online_and_offline-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-maintenance_mode:
    name: rabbit-ct-maintenance_mode
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-maintenance_mode
      id: tests
      run: |
        make -C deps/rabbit ct-maintenance_mode \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-maintenance_mode-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-maintenance_mode [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-maintenance_mode \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-maintenance_mode-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-maintenance_mode [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-maintenance_mode \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-maintenance_mode-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-many_node_ha:
    name: rabbit-ct-many_node_ha
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-many_node_ha
      id: tests
      run: |
        make -C deps/rabbit ct-many_node_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-many_node_ha-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-many_node_ha [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-many_node_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-many_node_ha-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-many_node_ha [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-many_node_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-many_node_ha-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-message_size_limit:
    name: rabbit-ct-message_size_limit
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-message_size_limit
      id: tests
      run: |
        make -C deps/rabbit ct-message_size_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-message_size_limit-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-message_size_limit [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-message_size_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-message_size_limit-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-message_size_limit [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-message_size_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-message_size_limit-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-metrics:
    name: rabbit-ct-metrics
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-metrics
      id: tests
      run: |
        make -C deps/rabbit ct-metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-metrics-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-metrics [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-metrics-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-metrics [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-metrics-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-mirrored_supervisor:
    name: rabbit-ct-mirrored_supervisor
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-mirrored_supervisor
      id: tests
      run: |
        make -C deps/rabbit ct-mirrored_supervisor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-mirrored_supervisor-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-mirrored_supervisor [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-mirrored_supervisor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-mirrored_supervisor-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-mirrored_supervisor [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-mirrored_supervisor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-mirrored_supervisor-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-msg_store:
    name: rabbit-ct-msg_store
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-msg_store
      id: tests
      run: |
        make -C deps/rabbit ct-msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-msg_store-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-msg_store [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-msg_store-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-msg_store [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-msg_store-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-peer_discovery_classic_config:
    name: rabbit-ct-peer_discovery_classic_config
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-peer_discovery_classic_config
      id: tests
      run: |
        make -C deps/rabbit ct-peer_discovery_classic_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_classic_config-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-peer_discovery_classic_config [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-peer_discovery_classic_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_classic_config-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-peer_discovery_classic_config [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-peer_discovery_classic_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_classic_config-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-peer_discovery_dns:
    name: rabbit-ct-peer_discovery_dns
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-peer_discovery_dns
      id: tests
      run: |
        make -C deps/rabbit ct-peer_discovery_dns \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_dns-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-peer_discovery_dns [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-peer_discovery_dns \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_dns-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-peer_discovery_dns [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-peer_discovery_dns \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-peer_discovery_dns-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_user_connection_channel_limit:
    name: rabbit-ct-per_user_connection_channel_limit
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_user_connection_channel_limit
      id: tests
      run: |
        make -C deps/rabbit ct-per_user_connection_channel_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_user_connection_channel_limit [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_user_connection_channel_limit [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_user_connection_channel_limit_partitions:
    name: rabbit-ct-per_user_connection_channel_limit_partitions
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_user_connection_channel_limit_partitions
      id: tests
      run: |
        make -C deps/rabbit ct-per_user_connection_channel_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit_partitions-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_user_connection_channel_limit_partitions [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit_partitions-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_user_connection_channel_limit_partitions [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_limit_partitions-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_user_connection_channel_tracking:
    name: rabbit-ct-per_user_connection_channel_tracking
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_user_connection_channel_tracking
      id: tests
      run: |
        make -C deps/rabbit ct-per_user_connection_channel_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_tracking-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_user_connection_channel_tracking [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_tracking-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_user_connection_channel_tracking [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_channel_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_channel_tracking-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_user_connection_tracking:
    name: rabbit-ct-per_user_connection_tracking
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_user_connection_tracking
      id: tests
      run: |
        make -C deps/rabbit ct-per_user_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_tracking-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_user_connection_tracking [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_tracking-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_user_connection_tracking [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_user_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_user_connection_tracking-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_vhost_connection_limit:
    name: rabbit-ct-per_vhost_connection_limit
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_vhost_connection_limit
      id: tests
      run: |
        make -C deps/rabbit ct-per_vhost_connection_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_vhost_connection_limit [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_connection_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_vhost_connection_limit [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_connection_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_vhost_connection_limit_partitions:
    name: rabbit-ct-per_vhost_connection_limit_partitions
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_vhost_connection_limit_partitions
      id: tests
      run: |
        make -C deps/rabbit ct-per_vhost_connection_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit_partitions-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_vhost_connection_limit_partitions [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_connection_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit_partitions-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_vhost_connection_limit_partitions [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_connection_limit_partitions \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_connection_limit_partitions-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_vhost_msg_store:
    name: rabbit-ct-per_vhost_msg_store
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_vhost_msg_store
      id: tests
      run: |
        make -C deps/rabbit ct-per_vhost_msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_msg_store-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_vhost_msg_store [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_msg_store-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_vhost_msg_store [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_msg_store \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_msg_store-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-per_vhost_queue_limit:
    name: rabbit-ct-per_vhost_queue_limit
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-per_vhost_queue_limit
      id: tests
      run: |
        make -C deps/rabbit ct-per_vhost_queue_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_queue_limit-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-per_vhost_queue_limit [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_queue_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_queue_limit-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-per_vhost_queue_limit [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-per_vhost_queue_limit \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-per_vhost_queue_limit-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-policy:
    name: rabbit-ct-policy
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-policy
      id: tests
      run: |
        make -C deps/rabbit ct-policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-policy-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-policy [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-policy-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-policy [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-policy-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-priority_queue:
    name: rabbit-ct-priority_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-priority_queue
      id: tests
      run: |
        make -C deps/rabbit ct-priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-priority_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-priority_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-priority_queue_recovery:
    name: rabbit-ct-priority_queue_recovery
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-priority_queue_recovery
      id: tests
      run: |
        make -C deps/rabbit ct-priority_queue_recovery \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue_recovery-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-priority_queue_recovery [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-priority_queue_recovery \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue_recovery-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-priority_queue_recovery [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-priority_queue_recovery \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-priority_queue_recovery-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-product_info:
    name: rabbit-ct-product_info
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-product_info
      id: tests
      run: |
        make -C deps/rabbit ct-product_info \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-product_info-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-product_info [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-product_info \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-product_info-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-product_info [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-product_info \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-product_info-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-proxy_protocol:
    name: rabbit-ct-proxy_protocol
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-proxy_protocol
      id: tests
      run: |
        make -C deps/rabbit ct-proxy_protocol \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-proxy_protocol-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-proxy_protocol [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-proxy_protocol \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-proxy_protocol-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-proxy_protocol [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-proxy_protocol \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-proxy_protocol-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-publisher_confirms_parallel:
    name: rabbit-ct-publisher_confirms_parallel
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-publisher_confirms_parallel
      id: tests
      run: |
        make -C deps/rabbit ct-publisher_confirms_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-publisher_confirms_parallel-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-publisher_confirms_parallel [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-publisher_confirms_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-publisher_confirms_parallel-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-publisher_confirms_parallel [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-publisher_confirms_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-publisher_confirms_parallel-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-queue_length_limits:
    name: rabbit-ct-queue_length_limits
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-queue_length_limits
      id: tests
      run: |
        make -C deps/rabbit ct-queue_length_limits \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-queue_length_limits-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-queue_length_limits [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-queue_length_limits \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-queue_length_limits-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-queue_length_limits [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-queue_length_limits \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-queue_length_limits-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-queue_master_location:
    name: rabbit-ct-queue_master_location
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-queue_master_location
      id: tests
      run: |
        make -C deps/rabbit ct-queue_master_location \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-queue_master_location-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-queue_master_location [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-queue_master_location \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-queue_master_location-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-queue_master_location [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-queue_master_location \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-queue_master_location-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-queue_parallel:
    name: rabbit-ct-queue_parallel
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-queue_parallel
      id: tests
      run: |
        make -C deps/rabbit ct-queue_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-queue_parallel-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-queue_parallel [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-queue_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-queue_parallel-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-queue_parallel [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-queue_parallel \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-queue_parallel-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-queue_type:
    name: rabbit-ct-queue_type
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-queue_type
      id: tests
      run: |
        make -C deps/rabbit ct-queue_type \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-queue_type-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-queue_type [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-queue_type \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-queue_type-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-queue_type [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-queue_type \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-queue_type-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-quorum_queue:
    name: rabbit-ct-quorum_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-quorum_queue
      id: tests
      run: |
        make -C deps/rabbit ct-quorum_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-quorum_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-quorum_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-quorum_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-quorum_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-quorum_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-quorum_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-quorum_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_confirms:
    name: rabbit-ct-rabbit_confirms
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_confirms
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_confirms \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_confirms-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_confirms [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_confirms \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_confirms-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_confirms [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_confirms \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_confirms-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_core_metrics_gc:
    name: rabbit-ct-rabbit_core_metrics_gc
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_core_metrics_gc
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_core_metrics_gc \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_core_metrics_gc-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_core_metrics_gc [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_core_metrics_gc \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_core_metrics_gc-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_core_metrics_gc [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_core_metrics_gc \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_core_metrics_gc-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_fifo:
    name: rabbit-ct-rabbit_fifo
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_fifo
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_fifo \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_fifo [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_fifo [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_fifo_int:
    name: rabbit-ct-rabbit_fifo_int
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_fifo_int
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_fifo_int \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_int-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_fifo_int [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_int \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_int-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_fifo_int [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_int \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_int-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_fifo_prop:
    name: rabbit-ct-rabbit_fifo_prop
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_fifo_prop
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_fifo_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_prop-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_fifo_prop [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_prop-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_fifo_prop [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_prop-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_fifo_v0:
    name: rabbit-ct-rabbit_fifo_v0
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_fifo_v0
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_fifo_v0 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_v0-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_fifo_v0 [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_v0 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_v0-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_fifo_v0 [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_fifo_v0 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_fifo_v0-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_msg_record:
    name: rabbit-ct-rabbit_msg_record
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_msg_record
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_msg_record \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_msg_record-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_msg_record [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_msg_record \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_msg_record-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_msg_record [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_msg_record \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_msg_record-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbit_stream_queue:
    name: rabbit-ct-rabbit_stream_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbit_stream_queue
      id: tests
      run: |
        make -C deps/rabbit ct-rabbit_stream_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_stream_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbit_stream_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_stream_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_stream_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbit_stream_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbit_stream_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbit_stream_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbitmq_queues_cli_integration:
    name: rabbit-ct-rabbitmq_queues_cli_integration
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbitmq_queues_cli_integration
      id: tests
      run: |
        make -C deps/rabbit ct-rabbitmq_queues_cli_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmq_queues_cli_integration-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbitmq_queues_cli_integration [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmq_queues_cli_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmq_queues_cli_integration-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbitmq_queues_cli_integration [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmq_queues_cli_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmq_queues_cli_integration-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbitmqctl_integration:
    name: rabbit-ct-rabbitmqctl_integration
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbitmqctl_integration
      id: tests
      run: |
        make -C deps/rabbit ct-rabbitmqctl_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_integration-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbitmqctl_integration [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmqctl_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_integration-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbitmqctl_integration [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmqctl_integration \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_integration-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-rabbitmqctl_shutdown:
    name: rabbit-ct-rabbitmqctl_shutdown
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-rabbitmqctl_shutdown
      id: tests
      run: |
        make -C deps/rabbit ct-rabbitmqctl_shutdown \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_shutdown-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-rabbitmqctl_shutdown [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmqctl_shutdown \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_shutdown-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-rabbitmqctl_shutdown [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-rabbitmqctl_shutdown \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-rabbitmqctl_shutdown-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-signal_handling:
    name: rabbit-ct-signal_handling
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-signal_handling
      id: tests
      run: |
        make -C deps/rabbit ct-signal_handling \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-signal_handling-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-signal_handling [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-signal_handling \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-signal_handling-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-signal_handling [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-signal_handling \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-signal_handling-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-simple_ha:
    name: rabbit-ct-simple_ha
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-simple_ha
      id: tests
      run: |
        make -C deps/rabbit ct-simple_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-simple_ha-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-simple_ha [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-simple_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-simple_ha-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-simple_ha [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-simple_ha \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-simple_ha-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-single_active_consumer:
    name: rabbit-ct-single_active_consumer
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-single_active_consumer
      id: tests
      run: |
        make -C deps/rabbit ct-single_active_consumer \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-single_active_consumer-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-single_active_consumer [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-single_active_consumer \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-single_active_consumer-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-single_active_consumer [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-single_active_consumer \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-single_active_consumer-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-sync_detection:
    name: rabbit-ct-sync_detection
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-sync_detection
      id: tests
      run: |
        make -C deps/rabbit ct-sync_detection \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-sync_detection-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-sync_detection [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-sync_detection \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-sync_detection-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-sync_detection [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-sync_detection \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-sync_detection-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-term_to_binary_compat_prop:
    name: rabbit-ct-term_to_binary_compat_prop
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-term_to_binary_compat_prop
      id: tests
      run: |
        make -C deps/rabbit ct-term_to_binary_compat_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-term_to_binary_compat_prop-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-term_to_binary_compat_prop [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-term_to_binary_compat_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-term_to_binary_compat_prop-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-term_to_binary_compat_prop [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-term_to_binary_compat_prop \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-term_to_binary_compat_prop-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-topic_permission:
    name: rabbit-ct-topic_permission
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-topic_permission
      id: tests
      run: |
        make -C deps/rabbit ct-topic_permission \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-topic_permission-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-topic_permission [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-topic_permission \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-topic_permission-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-topic_permission [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-topic_permission \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-topic_permission-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_access_control:
    name: rabbit-ct-unit_access_control
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_access_control
      id: tests
      run: |
        make -C deps/rabbit ct-unit_access_control \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_access_control [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_access_control [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_access_control_authn_authz_context_propagation:
    name: rabbit-ct-unit_access_control_authn_authz_context_propagation
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_access_control_authn_authz_context_propagation
      id: tests
      run: |
        make -C deps/rabbit ct-unit_access_control_authn_authz_context_propagation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_authn_authz_context_propagation-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_access_control_authn_authz_context_propagation [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control_authn_authz_context_propagation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_authn_authz_context_propagation-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_access_control_authn_authz_context_propagation [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control_authn_authz_context_propagation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_authn_authz_context_propagation-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_access_control_credential_validation:
    name: rabbit-ct-unit_access_control_credential_validation
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_access_control_credential_validation
      id: tests
      run: |
        make -C deps/rabbit ct-unit_access_control_credential_validation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_credential_validation-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_access_control_credential_validation [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control_credential_validation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_credential_validation-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_access_control_credential_validation [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_access_control_credential_validation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_access_control_credential_validation-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_amqp091_content_framing:
    name: rabbit-ct-unit_amqp091_content_framing
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_amqp091_content_framing
      id: tests
      run: |
        make -C deps/rabbit ct-unit_amqp091_content_framing \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_content_framing-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_amqp091_content_framing [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_amqp091_content_framing \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_content_framing-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_amqp091_content_framing [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_amqp091_content_framing \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_content_framing-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_amqp091_server_properties:
    name: rabbit-ct-unit_amqp091_server_properties
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_amqp091_server_properties
      id: tests
      run: |
        make -C deps/rabbit ct-unit_amqp091_server_properties \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_server_properties-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_amqp091_server_properties [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_amqp091_server_properties \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_server_properties-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_amqp091_server_properties [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_amqp091_server_properties \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_amqp091_server_properties-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_app_management:
    name: rabbit-ct-unit_app_management
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_app_management
      id: tests
      run: |
        make -C deps/rabbit ct-unit_app_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_app_management-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_app_management [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_app_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_app_management-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_app_management [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_app_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_app_management-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_cluster_formation_locking_mocks:
    name: rabbit-ct-unit_cluster_formation_locking_mocks
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_cluster_formation_locking_mocks
      id: tests
      run: |
        make -C deps/rabbit ct-unit_cluster_formation_locking_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_cluster_formation_locking_mocks-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_cluster_formation_locking_mocks [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_cluster_formation_locking_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_cluster_formation_locking_mocks-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_cluster_formation_locking_mocks [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_cluster_formation_locking_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_cluster_formation_locking_mocks-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_collections:
    name: rabbit-ct-unit_collections
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_collections
      id: tests
      run: |
        make -C deps/rabbit ct-unit_collections \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_collections-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_collections [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_collections \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_collections-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_collections [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_collections \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_collections-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_config_value_encryption:
    name: rabbit-ct-unit_config_value_encryption
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_config_value_encryption
      id: tests
      run: |
        make -C deps/rabbit ct-unit_config_value_encryption \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_config_value_encryption-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_config_value_encryption [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_config_value_encryption \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_config_value_encryption-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_config_value_encryption [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_config_value_encryption \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_config_value_encryption-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_connection_tracking:
    name: rabbit-ct-unit_connection_tracking
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_connection_tracking
      id: tests
      run: |
        make -C deps/rabbit ct-unit_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_connection_tracking-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_connection_tracking [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_connection_tracking-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_connection_tracking [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_connection_tracking \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_connection_tracking-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_credit_flow:
    name: rabbit-ct-unit_credit_flow
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_credit_flow
      id: tests
      run: |
        make -C deps/rabbit ct-unit_credit_flow \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_credit_flow-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_credit_flow [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_credit_flow \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_credit_flow-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_credit_flow [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_credit_flow \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_credit_flow-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_disk_monitor:
    name: rabbit-ct-unit_disk_monitor
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_disk_monitor
      id: tests
      run: |
        make -C deps/rabbit ct-unit_disk_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_disk_monitor [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_disk_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_disk_monitor [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_disk_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_disk_monitor_mocks:
    name: rabbit-ct-unit_disk_monitor_mocks
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_disk_monitor_mocks
      id: tests
      run: |
        make -C deps/rabbit ct-unit_disk_monitor_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor_mocks-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_disk_monitor_mocks [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_disk_monitor_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor_mocks-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_disk_monitor_mocks [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_disk_monitor_mocks \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_disk_monitor_mocks-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_file_handle_cache:
    name: rabbit-ct-unit_file_handle_cache
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_file_handle_cache
      id: tests
      run: |
        make -C deps/rabbit ct-unit_file_handle_cache \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_file_handle_cache-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_file_handle_cache [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_file_handle_cache \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_file_handle_cache-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_file_handle_cache [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_file_handle_cache \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_file_handle_cache-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_gen_server2:
    name: rabbit-ct-unit_gen_server2
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_gen_server2
      id: tests
      run: |
        make -C deps/rabbit ct-unit_gen_server2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gen_server2-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_gen_server2 [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_gen_server2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gen_server2-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_gen_server2 [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_gen_server2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gen_server2-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_gm:
    name: rabbit-ct-unit_gm
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_gm
      id: tests
      run: |
        make -C deps/rabbit ct-unit_gm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gm-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_gm [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_gm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gm-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_gm [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_gm \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_gm-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_log_config:
    name: rabbit-ct-unit_log_config
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_log_config
      id: tests
      run: |
        make -C deps/rabbit ct-unit_log_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_config-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_log_config [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_log_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_config-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_log_config [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_log_config \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_config-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_log_management:
    name: rabbit-ct-unit_log_management
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_log_management
      id: tests
      run: |
        make -C deps/rabbit ct-unit_log_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_management-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_log_management [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_log_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_management-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_log_management [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_log_management \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_log_management-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_operator_policy:
    name: rabbit-ct-unit_operator_policy
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_operator_policy
      id: tests
      run: |
        make -C deps/rabbit ct-unit_operator_policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_operator_policy-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_operator_policy [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_operator_policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_operator_policy-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_operator_policy [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_operator_policy \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_operator_policy-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_pg_local:
    name: rabbit-ct-unit_pg_local
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_pg_local
      id: tests
      run: |
        make -C deps/rabbit ct-unit_pg_local \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_pg_local-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_pg_local [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_pg_local \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_pg_local-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_pg_local [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_pg_local \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_pg_local-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_plugin_directories:
    name: rabbit-ct-unit_plugin_directories
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_plugin_directories
      id: tests
      run: |
        make -C deps/rabbit ct-unit_plugin_directories \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_directories-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_plugin_directories [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_plugin_directories \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_directories-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_plugin_directories [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_plugin_directories \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_directories-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_plugin_versioning:
    name: rabbit-ct-unit_plugin_versioning
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_plugin_versioning
      id: tests
      run: |
        make -C deps/rabbit ct-unit_plugin_versioning \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_versioning-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_plugin_versioning [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_plugin_versioning \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_versioning-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_plugin_versioning [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_plugin_versioning \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_plugin_versioning-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_policy_validators:
    name: rabbit-ct-unit_policy_validators
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_policy_validators
      id: tests
      run: |
        make -C deps/rabbit ct-unit_policy_validators \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_policy_validators-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_policy_validators [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_policy_validators \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_policy_validators-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_policy_validators [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_policy_validators \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_policy_validators-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_priority_queue:
    name: rabbit-ct-unit_priority_queue
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_priority_queue
      id: tests
      run: |
        make -C deps/rabbit ct-unit_priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_priority_queue-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_priority_queue [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_priority_queue-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_priority_queue [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_priority_queue \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_priority_queue-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_queue_consumers:
    name: rabbit-ct-unit_queue_consumers
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_queue_consumers
      id: tests
      run: |
        make -C deps/rabbit ct-unit_queue_consumers \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_queue_consumers-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_queue_consumers [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_queue_consumers \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_queue_consumers-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_queue_consumers [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_queue_consumers \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_queue_consumers-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_stats_and_metrics:
    name: rabbit-ct-unit_stats_and_metrics
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_stats_and_metrics
      id: tests
      run: |
        make -C deps/rabbit ct-unit_stats_and_metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_stats_and_metrics-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_stats_and_metrics [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_stats_and_metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_stats_and_metrics-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_stats_and_metrics [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_stats_and_metrics \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_stats_and_metrics-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_supervisor2:
    name: rabbit-ct-unit_supervisor2
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_supervisor2
      id: tests
      run: |
        make -C deps/rabbit ct-unit_supervisor2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_supervisor2-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_supervisor2 [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_supervisor2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_supervisor2-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_supervisor2 [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_supervisor2 \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_supervisor2-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-unit_vm_memory_monitor:
    name: rabbit-ct-unit_vm_memory_monitor
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-unit_vm_memory_monitor
      id: tests
      run: |
        make -C deps/rabbit ct-unit_vm_memory_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-unit_vm_memory_monitor-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-unit_vm_memory_monitor [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-unit_vm_memory_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-unit_vm_memory_monitor-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-unit_vm_memory_monitor [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-unit_vm_memory_monitor \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-unit_vm_memory_monitor-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-upgrade_preparation:
    name: rabbit-ct-upgrade_preparation
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-upgrade_preparation
      id: tests
      run: |
        make -C deps/rabbit ct-upgrade_preparation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-upgrade_preparation-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-upgrade_preparation [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-upgrade_preparation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-upgrade_preparation-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-upgrade_preparation [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-upgrade_preparation \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-upgrade_preparation-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  rabbit-ct-vhost:
    name: rabbit-ct-vhost
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN ct-vhost
      id: tests
      run: |
        make -C deps/rabbit ct-vhost \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests.outcome == 'failure'
      with:
        name: rabbit-ct-vhost-logs
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: DOWNLOAD SECONDARY UMBRELLAS ARCHIVE
      uses: actions/download-artifact@v2
      with:
        name: secondary-umbrellas.tar.xz
    - name: UNPACK SECONDARY UMBRELLAS ARCHIVE
      run: |
        set -ex
        tar Jxf secondary-umbrellas.tar.xz
        rm secondary-umbrellas.tar.xz
    - name: RUN ct-vhost [mixed v3.7.28]
      id: tests-v3_7_28
      run: |
        make -C deps/rabbit distclean-ct ct-vhost \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.7.28 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.7.28]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.7.28]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_7_28.outcome == 'failure'
      with:
        name: rabbit-ct-vhost-logs-mixed-v3.7.28
        path: deps/rabbit/*-ct-logs-*.tar.xz
    - name: RUN ct-vhost [mixed v3.8.9]
      id: tests-v3_8_9
      run: |
        make -C deps/rabbit distclean-ct ct-vhost \
          base_rmq_ref=master \
          current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
          FULL= \
          FAIL_FAST=1 \
          SKIP_AS_ERROR=1
          SECONDARY_UMBRELLA_VERSION=$PWD/umbrellas/v3.8.9 \
          RABBITMQ_FEATURE_FLAGS=
    - name: ON FAILURE ARCHIVE TESTS LOGS [mixed v3.8.9]
      if: failure() && steps.tests.outcome == 'failure'
      run: |
        make -C deps/rabbit ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT [mixed v3.8.9]
      uses: actions/upload-artifact@v2-preview
      if: failure() && steps.tests-v3_8_9.outcome == 'failure'
      with:
        name: rabbit-ct-vhost-logs-mixed-v3.8.9
        path: deps/rabbit/*-ct-logs-*.tar.xz
  amqp_client:
    name: amqp_client
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/amqp_client tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/amqp_client ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: amqp_client-ct-logs
        path: deps/amqp_client/*-ct-logs-*.tar.xz
  amqp10_client:
    name: amqp10_client
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/amqp10_client tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/amqp10_client ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: amqp10_client-ct-logs
        path: deps/amqp10_client/*-ct-logs-*.tar.xz
  amqp10_common:
    name: amqp10_common
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/amqp10_common tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/amqp10_common ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: amqp10_common-ct-logs
        path: deps/amqp10_common/*-ct-logs-*.tar.xz
  rabbitmq_amqp1_0:
    name: rabbitmq_amqp1_0
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_amqp1_0 tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_amqp1_0 ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_amqp1_0-ct-logs
        path: deps/rabbitmq_amqp1_0/*-ct-logs-*.tar.xz
  rabbitmq_auth_backend_cache:
    name: rabbitmq_auth_backend_cache
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_auth_backend_cache tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_auth_backend_cache ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_auth_backend_cache-ct-logs
        path: deps/rabbitmq_auth_backend_cache/*-ct-logs-*.tar.xz
  rabbitmq_auth_backend_http:
    name: rabbitmq_auth_backend_http
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_auth_backend_http tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_auth_backend_http ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_auth_backend_http-ct-logs
        path: deps/rabbitmq_auth_backend_http/*-ct-logs-*.tar.xz
  rabbitmq_auth_backend_ldap:
    name: rabbitmq_auth_backend_ldap
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: INSTALL slapd
      run: |
        echo 'slapd    slapd/internal/generated_adminpw    password   rabbitmq' | sudo debconf-set-selections && \
        echo 'slapd    slapd/internal/adminpw    password   rabbitmq' | sudo debconf-set-selections && \
        echo 'slapd    slapd/password2    password   rabbitmq' | sudo debconf-set-selections && \
        echo 'slapd    slapd/password1    password   rabbitmq' | sudo debconf-set-selections && \
        echo 'slapd    slapd/backend    select    HDB' | sudo debconf-set-selections

        sudo apt-get install -y -V --fix-missing --no-install-recommends \
          ldap-utils \
          slapd
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_auth_backend_ldap tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_auth_backend_ldap ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_auth_backend_ldap-ct-logs
        path: deps/rabbitmq_auth_backend_ldap/*-ct-logs-*.tar.xz
  rabbitmq_auth_backend_oauth2:
    name: rabbitmq_auth_backend_oauth2
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_auth_backend_oauth2 tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_auth_backend_oauth2 ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_auth_backend_oauth2-ct-logs
        path: deps/rabbitmq_auth_backend_oauth2/*-ct-logs-*.tar.xz
  rabbitmq_auth_mechanism_ssl:
    name: rabbitmq_auth_mechanism_ssl
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_auth_mechanism_ssl tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_auth_mechanism_ssl ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_auth_mechanism_ssl-ct-logs
        path: deps/rabbitmq_auth_mechanism_ssl/*-ct-logs-*.tar.xz
  rabbitmq_aws:
    name: rabbitmq_aws
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_aws tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_aws ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_aws-ct-logs
        path: deps/rabbitmq_aws/*-ct-logs-*.tar.xz
  rabbitmq_cli:
    name: rabbitmq_cli
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: START BACKGROUND BROKER
      run: |
        make start-background-broker \
          PLUGINS='rabbitmq_federation rabbitmq_stomp'
    - name: RUN TESTS
      run: |
        make -C deps/rabbitmq_cli tests MIX_TEST_OPTS="--exclude test"
        make -C deps/rabbitmq_cli tests
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_cli-broker-logs
        path: broker-logs/broker-logs.tar.xz
    - name: STOP BACKGROUND BROKER
      if: always()
      run: |
        make stop-node
  rabbitmq_consistent_hash_exchange:
    name: rabbitmq_consistent_hash_exchange
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_consistent_hash_exchange tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_consistent_hash_exchange ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_consistent_hash_exchange-ct-logs
        path: deps/rabbitmq_consistent_hash_exchange/*-ct-logs-*.tar.xz
  rabbitmq_event_exchange:
    name: rabbitmq_event_exchange
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_event_exchange tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_event_exchange ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_event_exchange-ct-logs
        path: deps/rabbitmq_event_exchange/*-ct-logs-*.tar.xz
  rabbitmq_federation:
    name: rabbitmq_federation
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_federation tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests || run_tests || run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_federation ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_federation-ct-logs
        path: deps/rabbitmq_federation/*-ct-logs-*.tar.xz
  rabbitmq_federation_management:
    name: rabbitmq_federation_management
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_federation_management tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_federation_management ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_federation_management-ct-logs
        path: deps/rabbitmq_federation_management/*-ct-logs-*.tar.xz
  rabbitmq_jms_topic_exchange:
    name: rabbitmq_jms_topic_exchange
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_jms_topic_exchange tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_jms_topic_exchange ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_jms_topic_exchange-ct-logs
        path: deps/rabbitmq_jms_topic_exchange/*-ct-logs-*.tar.xz
  rabbitmq_management:
    name: rabbitmq_management
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_management tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_management ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_management-ct-logs
        path: deps/rabbitmq_management/*-ct-logs-*.tar.xz
  rabbitmq_management_agent:
    name: rabbitmq_management_agent
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_management_agent tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_management_agent ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_management_agent-ct-logs
        path: deps/rabbitmq_management_agent/*-ct-logs-*.tar.xz
  rabbitmq_mqtt:
    name: rabbitmq_mqtt
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_mqtt tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_mqtt ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_mqtt-ct-logs
        path: deps/rabbitmq_mqtt/*-ct-logs-*.tar.xz
  rabbitmq_peer_discovery_common:
    name: rabbitmq_peer_discovery_common
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_peer_discovery_common tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_peer_discovery_common ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_peer_discovery_common-ct-logs
        path: deps/rabbitmq_peer_discovery_common/*-ct-logs-*.tar.xz
  rabbitmq_peer_discovery_aws:
    name: rabbitmq_peer_discovery_aws
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        echo "${{ secrets.TERRAFORM_SSH_KEY }}" > id_rsa_terraform
        echo "${{ secrets.TERRAFORM_SSH_KEY_PUB }}" > id_rsa_terraform.pub

        function run_tests() {
          make -C deps/rabbitmq_peer_discovery_aws tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1 \
            ERLANG_VERSION=23.1 \
            AWS_ACCESS_KEY_ID=${{ secrets.CONCOURSE_AWS_ACCESS_KEY_ID }} \
            AWS_SECRET_ACCESS_KEY=${{ secrets.CONCOURSE_AWS_SECRET_ACCESS_KEY }} \
            SSH_KEY=$PWD/id_rsa_terraform
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_peer_discovery_aws ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_peer_discovery_aws-ct-logs
        path: deps/rabbitmq_peer_discovery_aws/*-ct-logs-*.tar.xz
  rabbitmq_peer_discovery_k8s:
    name: rabbitmq_peer_discovery_k8s
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_peer_discovery_k8s tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_peer_discovery_k8s ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_peer_discovery_k8s-ct-logs
        path: deps/rabbitmq_peer_discovery_k8s/*-ct-logs-*.tar.xz
  rabbitmq_peer_discovery_consul:
    name: rabbitmq_peer_discovery_consul
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_peer_discovery_consul tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_peer_discovery_consul ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_peer_discovery_consul-ct-logs
        path: deps/rabbitmq_peer_discovery_consul/*-ct-logs-*.tar.xz
  rabbitmq_peer_discovery_etcd:
    name: rabbitmq_peer_discovery_etcd
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: INSTALL daemonize
      run: |
        sudo apt-get install -y -V --fix-missing --no-install-recommends \
          daemonize
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_peer_discovery_etcd tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_peer_discovery_etcd ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_peer_discovery_etcd-ct-logs
        path: deps/rabbitmq_peer_discovery_etcd/*-ct-logs-*.tar.xz
  rabbitmq_prometheus:
    name: rabbitmq_prometheus
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_prometheus tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_prometheus ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_prometheus-ct-logs
        path: deps/rabbitmq_prometheus/*-ct-logs-*.tar.xz
  rabbitmq_random_exchange:
    name: rabbitmq_random_exchange
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_random_exchange tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_random_exchange ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_random_exchange-ct-logs
        path: deps/rabbitmq_random_exchange/*-ct-logs-*.tar.xz
  rabbitmq_recent_history_exchange:
    name: rabbitmq_recent_history_exchange
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_recent_history_exchange tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_recent_history_exchange ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_recent_history_exchange-ct-logs
        path: deps/rabbitmq_recent_history_exchange/*-ct-logs-*.tar.xz
  rabbitmq_sharding:
    name: rabbitmq_sharding
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_sharding tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_sharding ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_sharding-ct-logs
        path: deps/rabbitmq_sharding/*-ct-logs-*.tar.xz
  rabbitmq_shovel:
    name: rabbitmq_shovel
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_shovel tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_shovel ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_shovel-ct-logs
        path: deps/rabbitmq_shovel/*-ct-logs-*.tar.xz
  rabbitmq_shovel_management:
    name: rabbitmq_shovel_management
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_shovel_management tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_shovel_management ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_shovel_management-ct-logs
        path: deps/rabbitmq_shovel_management/*-ct-logs-*.tar.xz
  rabbitmq_stomp:
    name: rabbitmq_stomp
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_stomp tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_stomp ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_stomp-ct-logs
        path: deps/rabbitmq_stomp/*-ct-logs-*.tar.xz
  rabbitmq_stream:
    name: rabbitmq_stream
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_stream tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_stream ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_stream-ct-logs
        path: deps/rabbitmq_stream/*-ct-logs-*.tar.xz
  rabbitmq_stream_management:
    name: rabbitmq_stream_management
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_stream_management tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_stream_management ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_stream_management-ct-logs
        path: deps/rabbitmq_stream_management/*-ct-logs-*.tar.xz
  rabbitmq_stream_prometheus:
    name: rabbitmq_stream_prometheus
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_stream_prometheus tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_stream_prometheus ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_stream_prometheus-ct-logs
        path: deps/rabbitmq_stream_prometheus/*-ct-logs-*.tar.xz
  rabbitmq_top:
    name: rabbitmq_top
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_top tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_top ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_top-ct-logs
        path: deps/rabbitmq_top/*-ct-logs-*.tar.xz
  rabbitmq_tracing:
    name: rabbitmq_tracing
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_tracing tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_tracing ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_tracing-ct-logs
        path: deps/rabbitmq_tracing/*-ct-logs-*.tar.xz
  rabbitmq_trust_store:
    name: rabbitmq_trust_store
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_trust_store tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_trust_store ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_trust_store-ct-logs
        path: deps/rabbitmq_trust_store/*-ct-logs-*.tar.xz
  rabbitmq_web_dispatch:
    name: rabbitmq_web_dispatch
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_web_dispatch tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_web_dispatch ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_web_dispatch-ct-logs
        path: deps/rabbitmq_web_dispatch/*-ct-logs-*.tar.xz
  rabbitmq_web_mqtt:
    name: rabbitmq_web_mqtt
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_web_mqtt tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_web_mqtt ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_web_mqtt-ct-logs
        path: deps/rabbitmq_web_mqtt/*-ct-logs-*.tar.xz
  rabbitmq_web_mqtt_examples:
    name: rabbitmq_web_mqtt_examples
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_web_mqtt_examples tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_web_mqtt_examples ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_web_mqtt_examples-ct-logs
        path: deps/rabbitmq_web_mqtt_examples/*-ct-logs-*.tar.xz
  rabbitmq_web_stomp:
    name: rabbitmq_web_stomp
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_web_stomp tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_web_stomp ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_web_stomp-ct-logs
        path: deps/rabbitmq_web_stomp/*-ct-logs-*.tar.xz
  rabbitmq_web_stomp_examples:
    name: rabbitmq_web_stomp_examples
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: CONFIGURE OTP & ELIXIR
      uses: actions/setup-elixir@v1
      with:
        otp-version: "23.1"
        elixir-version: 1.10.4
    - name: RUN TESTS
      run: |
        function run_tests() {
          make -C deps/rabbitmq_web_stomp_examples tests \
            base_rmq_ref=master \
            current_rmq_ref=${{ steps.ref.outputs.branch_or_tag_name }} \
            FULL= \
            FAIL_FAST=1 \
            SKIP_AS_ERROR=1
        }
        run_tests
    - name: ON FAILRUE ARCHIVE TESTS LOGS
      if: failure()
      run: |
        make -C deps/rabbitmq_web_stomp_examples ct-logs-archive
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: rabbitmq_web_stomp_examples-ct-logs
        path: deps/rabbitmq_web_stomp_examples/*-ct-logs-*.tar.xz
  finish:
    name: finish
    needs:
    - prepare
    - xref
    - dialyze
    - rabbit_common
    - rabbit-checks
    - rabbit-ct-amqqueue_backward_compatibility
    - rabbit-ct-backing_queue
    - rabbit-ct-channel_interceptor
    - rabbit-ct-channel_operation_timeout
    - rabbit-ct-cluster
    - rabbit-ct-cluster_rename
    - rabbit-ct-clustering_management
    - rabbit-ct-config_schema
    - rabbit-ct-confirms_rejects
    - rabbit-ct-consumer_timeout
    - rabbit-ct-crashing_queues
    - rabbit-ct-dead_lettering
    - rabbit-ct-definition_import
    - rabbit-ct-disconnect_detected_during_alarm
    - rabbit-ct-dynamic_ha
    - rabbit-ct-dynamic_qq
    - rabbit-ct-eager_sync
    - rabbit-ct-feature_flags
    - rabbit-ct-lazy_queue
    - rabbit-ct-list_consumers_sanity_check
    - rabbit-ct-list_queues_online_and_offline
    - rabbit-ct-maintenance_mode
    - rabbit-ct-many_node_ha
    - rabbit-ct-message_size_limit
    - rabbit-ct-metrics
    - rabbit-ct-mirrored_supervisor
    - rabbit-ct-msg_store
    - rabbit-ct-peer_discovery_classic_config
    - rabbit-ct-peer_discovery_dns
    - rabbit-ct-per_user_connection_channel_limit
    - rabbit-ct-per_user_connection_channel_limit_partitions
    - rabbit-ct-per_user_connection_channel_tracking
    - rabbit-ct-per_user_connection_tracking
    - rabbit-ct-per_vhost_connection_limit
    - rabbit-ct-per_vhost_connection_limit_partitions
    - rabbit-ct-per_vhost_msg_store
    - rabbit-ct-per_vhost_queue_limit
    - rabbit-ct-policy
    - rabbit-ct-priority_queue
    - rabbit-ct-priority_queue_recovery
    - rabbit-ct-product_info
    - rabbit-ct-proxy_protocol
    - rabbit-ct-publisher_confirms_parallel
    - rabbit-ct-queue_length_limits
    - rabbit-ct-queue_master_location
    - rabbit-ct-queue_parallel
    - rabbit-ct-queue_type
    - rabbit-ct-quorum_queue
    - rabbit-ct-rabbit_confirms
    - rabbit-ct-rabbit_core_metrics_gc
    - rabbit-ct-rabbit_fifo
    - rabbit-ct-rabbit_fifo_int
    - rabbit-ct-rabbit_fifo_prop
    - rabbit-ct-rabbit_fifo_v0
    - rabbit-ct-rabbit_msg_record
    - rabbit-ct-rabbit_stream_queue
    - rabbit-ct-rabbitmq_queues_cli_integration
    - rabbit-ct-rabbitmqctl_integration
    - rabbit-ct-rabbitmqctl_shutdown
    - rabbit-ct-signal_handling
    - rabbit-ct-simple_ha
    - rabbit-ct-single_active_consumer
    - rabbit-ct-sync_detection
    - rabbit-ct-term_to_binary_compat_prop
    - rabbit-ct-topic_permission
    - rabbit-ct-unit_access_control
    - rabbit-ct-unit_access_control_authn_authz_context_propagation
    - rabbit-ct-unit_access_control_credential_validation
    - rabbit-ct-unit_amqp091_content_framing
    - rabbit-ct-unit_amqp091_server_properties
    - rabbit-ct-unit_app_management
    - rabbit-ct-unit_cluster_formation_locking_mocks
    - rabbit-ct-unit_collections
    - rabbit-ct-unit_config_value_encryption
    - rabbit-ct-unit_connection_tracking
    - rabbit-ct-unit_credit_flow
    - rabbit-ct-unit_disk_monitor
    - rabbit-ct-unit_disk_monitor_mocks
    - rabbit-ct-unit_file_handle_cache
    - rabbit-ct-unit_gen_server2
    - rabbit-ct-unit_gm
    - rabbit-ct-unit_log_config
    - rabbit-ct-unit_log_management
    - rabbit-ct-unit_operator_policy
    - rabbit-ct-unit_pg_local
    - rabbit-ct-unit_plugin_directories
    - rabbit-ct-unit_plugin_versioning
    - rabbit-ct-unit_policy_validators
    - rabbit-ct-unit_priority_queue
    - rabbit-ct-unit_queue_consumers
    - rabbit-ct-unit_stats_and_metrics
    - rabbit-ct-unit_supervisor2
    - rabbit-ct-unit_vm_memory_monitor
    - rabbit-ct-upgrade_preparation
    - rabbit-ct-vhost
    - amqp_client
    - amqp10_client
    - amqp10_common
    - rabbitmq_amqp1_0
    - rabbitmq_auth_backend_cache
    - rabbitmq_auth_backend_http
    - rabbitmq_auth_backend_ldap
    - rabbitmq_auth_backend_oauth2
    - rabbitmq_auth_mechanism_ssl
    - rabbitmq_aws
    - rabbitmq_cli
    - rabbitmq_consistent_hash_exchange
    - rabbitmq_event_exchange
    - rabbitmq_federation
    - rabbitmq_federation_management
    - rabbitmq_jms_topic_exchange
    - rabbitmq_management
    - rabbitmq_management_agent
    - rabbitmq_mqtt
    - rabbitmq_peer_discovery_common
    - rabbitmq_peer_discovery_aws
    - rabbitmq_peer_discovery_k8s
    - rabbitmq_peer_discovery_consul
    - rabbitmq_peer_discovery_etcd
    - rabbitmq_prometheus
    - rabbitmq_random_exchange
    - rabbitmq_recent_history_exchange
    - rabbitmq_sharding
    - rabbitmq_shovel
    - rabbitmq_shovel_management
    - rabbitmq_stomp
    - rabbitmq_stream
    - rabbitmq_stream_management
    - rabbitmq_stream_prometheus
    - rabbitmq_top
    - rabbitmq_tracing
    - rabbitmq_trust_store
    - rabbitmq_web_dispatch
    - rabbitmq_web_mqtt
    - rabbitmq_web_mqtt_examples
    - rabbitmq_web_stomp
    - rabbitmq_web_stomp_examples
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'') && (success() || failure())'
    steps:
    - uses: technote-space/workflow-conclusion-action@v1
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true
    - name: RECORD BUILD FINISH
      run: |
        echo -n "${{ env.WORKFLOW_CONCLUSION }}" > conclusion
        gsutil cp conclusion 'gs://monorepo_github_actions_conclusions/${{ github.sha }}/${{ github.workflow }}'
